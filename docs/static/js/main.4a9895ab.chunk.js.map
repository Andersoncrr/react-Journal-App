{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","EACT_APP_APPID","initializeApp","db","getFirestore","googleAuthProvider","GoogleAuthProvider","loadNotes","uid","a","getDocs","query","collection","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","auth","url","noteToFireStore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","activeUrl","useEffect","current","placeholder","autoComplete","src","alt","deleteDoc","startDeleting","NothingSelected","setError","err","startLoading","finishLoading","login","displayName","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","getAuth","signOut","newNote","Date","getTime","addDoc","console","log","JournalScreen","LoginScreen","loading","ui","email","password","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","message","startLoginEmailPassword","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4a9895ab.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.EACT_APP_APPID\r\n  };\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\n\r\nconst db = getFirestore()\r\n\r\n\r\n\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n};","import { collection, query, getDocs } from \"@firebase/firestore\";\r\nimport { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await getDocs(query(collection(db, `${ uid }/journal/notes`)));\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n      });\r\n\r\n    return notes;\r\n};","export const types = {\r\n\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStarLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n};","\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dyegvlyox/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method:'POST',\r\n            body: formData\r\n        })\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport { addDoc, collection, deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from '../types/types';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        try {\r\n            const doc = await addDoc(collection(db, `${uid}/journal/notes`), newNote)\r\n            dispatch(activeNote( doc.id, newNote ));\r\n            dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n          } catch (e) {\r\n            console.log(e)\r\n          }\r\n\r\n    };\r\n};\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n\r\n    }\r\n};\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFireStore = { ...note };\r\n        delete noteToFireStore.id;\r\n\r\n        const noteRef = doc(db, `${uid}/journal/notes/${note.id}`)\r\n        await updateDoc(noteRef,noteToFireStore);\r\n\r\n        dispatch( refreshNote( note.id, noteToFireStore ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n};\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type:types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) );\r\n\r\n        Swal.close();\r\n\r\n    }\r\n};\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        const noteRef = doc(db, `${uid}/journal/notes/${id}`)\r\n        await deleteDoc(noteRef);\r\n \r\n        dispatch(deleteNote(id));\r\n\r\n    };\r\n};\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    };\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display:'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, url, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n    const activeUrl = useRef( note.url );\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n        if ( note.url !== activeUrl.current ) {\r\n            reset( note );\r\n            activeUrl.current = note.url;\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                >\r\n\r\n                </textarea>\r\n\r\n                {\r\n                    url &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={ url }\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button \r\n            className=\"btn btn-danger\"\r\n            onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type:types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type:types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type:types.uiStarLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type:types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        const auth = getAuth();\r\n        return signInWithEmailAndPassword(auth, email, password)\r\n            .then(({user}) => {\r\n                dispatch(login( user.uid, user.displayName ));\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch((e) => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        const auth = getAuth();\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await updateProfile(user, { displayName: name });\r\n\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch(e => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n            });\r\n    };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        const auth = getAuth();\r\n        await signOut(auth);\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n            \r\n    };\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment( date );\r\n    const dispatch = useDispatch();\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote( id, {\r\n                date, title, body, url\r\n            }) \r\n        );\r\n    };\r\n\r\n    return (\r\n        <div \r\n        className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n        onClick={ handleEntryClick }\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { noteDate.format('dddd') } </span>\r\n                <h4> { noteDate.format('Do') } </h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    };\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    };\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active )\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Link \r\n                to=\"/auth/register\"\r\n                className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) )\r\n        }\r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError('Password should be at least 6 characters and match each other') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                >\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    disabled={ loading }\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link\r\n                to=\"/auth/login\"\r\n                className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n                <Route \r\n                    exact\r\n                    path=\"/auth/login\"\r\n                    component={ LoginScreen }\r\n                />\r\n\r\n                <Route \r\n                    exact\r\n                    path=\"/auth/register\"\r\n                    component={ RegisterScreen }\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ?( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState(true);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        const auth = getAuth();\r\n        onAuthStateChanged(auth, async(user) => {\r\n            \r\n            if( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n\r\n    }, [ dispatch, setChecking, setIsLoggedIn ]);\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }  \r\n                        isAuthenticated={ isLoggedIn } \r\n                    />  \r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\" \r\n                        component={ JournalScreen }   \r\n                    />  \r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes:[],\r\n    active: null\r\n};\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state= initialState, action ) => {\r\n   \r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStarLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from '../types/types';\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n   \r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}